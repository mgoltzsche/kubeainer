[Unit]
Description=kubelet: The Kubernetes Node Agent
Documentation=http://kubernetes.io/docs/
After=crio.service
Wants=crio.service

[Service]
# See https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/kubelet-integration/#the-kubelet-drop-in-file-for-systemd
# For CRI-O see: https://github.com/cri-o/cri-o/blob/master/tutorials/kubeadm.md
# TODO: use systemd cgroup driver: --cgroup-driver=systemd --cgroup-root=/systemd

Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
# Include /run/env in order to pass through KUBELET_CUSTOM_ARGS
EnvironmentFile=/run/env
# This is a file that "kubeadm init" and "kubeadm join" generate at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
# --resolve-conf (default /etc/resolv.conf) must point to "real" resolv.conf without loopback IPs (otherwise coredns forwards to itself)
# see https://github.com/coredns/coredns/blob/master/plugin/loop/README.md#troubleshooting
# typical original resolv.conf locations: /run/systemd/resolve/resolv.conf, /etc/resolvconf/resolv.conf.d/original
Environment="KUBELET_EXTRA_ARGS=--feature-gates=AllAlpha=false,RunAsGroup=true \
	--container-runtime=remote \
	--container-runtime-endpoint=unix:///var/run/crio/crio.sock \
	--runtime-request-timeout=5m \
	--cgroups-per-qos=false \
	--enforce-node-allocatable='' \
	--oom-score-adj=0 \
	--cgroup-driver=cgroupfs \
	--cgroup-root=/ \
	--kube-reserved-cgroup=/kube-reserved \
	--kubelet-cgroups=/kubelet \
	--resolv-conf=/etc/resolv.conf.coredns \
	--fail-swap-on=false"
ExecStart=/usr/local/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS $KUBELET_CUSTOM_ARGS

#ExecStart=/usr/local/bin/start-kubelet
Restart=always
StartLimitInterval=0
RestartSec=10
Delegate=yes
KillMode=process

[Install]
WantedBy=multi-user.target
