apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: kube-system
  labels:
    app: external-dns
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      name: external-dns
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      securityContext:
      #runAsUser: 65534
      #runAsGroup: 65534
      #fsGroup: 65534
      priorityClassName: system-cluster-critical
      initContainers:
      - name: keygen
        image: resystit/bind9:latest
        command: ["sh", "-c"]
        # Generate TSIG key
        args:
        - |
          tsig-keygen -a hmac-sha256 externaldns > /var/run/named/externaldns.key &&
          cat /var/run/named/externaldns.key | grep -E '^\s*secret' | sed -E 's/.+"([^"]+)".*/\1/' > /var/run/named/externaldns.secret
        volumeMounts:
        - name: tsig-key
          mountPath: /var/run/named
        - name: bind-state
          mountPath: /var/bind
      containers:
      - name: bind
        image: resystit/bind9:latest
        command: ["sh", "-c"]
        args:
        - |
          set -e
          FORWARDERS="$(grep -E '^nameserver\s' /etc/resolv.conf | grep -Eo '[0-9\.]+' | grep -Ev "$(hostname -i | sed -E 's/\./\\./g' | xargs | sed -E 's/ /|/g')" | sed -E 's/$/;/g')"
          printf "forwarders {\n${FORWARDERS}\n1.1.1.1;\n8.8.8.8;\n};\n" > /etc/bind/forwarders.conf
          exec named -g -c /etc/bind/named.conf
        ports:
        - name: dns
          containerPort: 53
          protocol: UDP
        volumeMounts:
        - name: bind-conf-dir
          mountPath: /etc/bind
        - name: bind-conf
          subPath: named.conf
          mountPath: /etc/bind/named.conf
        - name: bind-conf
          subPath: k8s.zone
          mountPath: /etc/bind/k8s.zone
        - name: tsig-key
          mountPath: /var/run/named
        - name: bind-state
          mountPath: /var/bind
      - name: external-dns
        image: registry.opensource.zalan.do/teapot/external-dns:v0.5.17
        command: ["/bin/sh", "-c"]
        args:
        # to expose services they must be of type LoadBalancer and
        # annotated with external-dns.alpha.kubernetes.io/hostname
        - |
          KEY="$(cat /var/run/named/externaldns.secret)" &&
          exec bin/external-dns \
          --txt-owner-id=k8s \
          --provider=rfc2136 \
          --rfc2136-host=127.0.0.1 \
          --rfc2136-port=53 \
          --rfc2136-tsig-secret="$KEY" \
          --rfc2136-tsig-secret-alg=hmac-sha256 \
          --rfc2136-tsig-keyname=externaldns \
          --rfc2136-tsig-axfr \
          --source=service \
          --source=ingress
        env:
        - name: EXTERNAL_DNS_DOMAIN_FILTER # TODO: make the DNS zone configurable via kpt setter or so
          value: example.org
        - name: EXTERNAL_DNS_RFC2136_ZONE
          value: example.org
        volumeMounts:
        - name: tsig-key
          mountPath: /var/run/named
      volumes:
      - name: tsig-key
        emptyDir: {}
      - name: bind-state
        emptyDir: {}
      - name: bind-conf-dir
        emptyDir: {}
      - name: bind-conf
        configMap:
          name: externaldns-bind-conf
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        # Deploy on master node only - required to be able to scale workers without loosing DNS within experimental setup
        nodeSelectorTerms:
        - matchExpressions:
          - key: "node-role.kubernetes.io/master"
            operator: Exists
